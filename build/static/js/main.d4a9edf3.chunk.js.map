{"version":3,"sources":["components/Clock.jsx","components/SetAlarmsTable.jsx","components/SetTime.jsx","components/Title.jsx","App.js","serviceWorker.js","index.js"],"names":["Clock","props","react_default","a","createElement","className","time","SetAlarmsTable","setAlarms","map","alarms","key","toLocaleTimeString","hour","minute","onClick","deleteAlarm","SetTime","type","value","onChange","change","onKeyPress","handleEnterPress","length","components_SetAlarmsTable","setTime","visibleButtonPauseAudio","stopAlarm","Title","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","alarmСlock","state","Date","controllTime","url","audio","Audio","timer","bind","assertThisInitialized","compareAlarm","setInterval","document","body","style","backgroundImage","clearInterval","split","setState","toString","target","setHours","setMinutes","prevState","concat","toConsumableArray","_this2","_this$state","splitTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","getHours","getMinutes","play","setTimeout","filter","alarm","pause","_iterator","Symbol","iterator","next","done","err","return","_this$state2","components_Title","components_Clock","components_SetTime","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4a9edf3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Clock = props => <h2 className=\"clock\">{props.time}</h2>;\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\n\r\nconst SetAlarmsTable = props => {\r\n  return (\r\n    <table className=\"alarms-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Година</th>\r\n          <th>Видалити</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.setAlarms.map(alarms => (\r\n          <tr key={alarms}>\r\n            <td>{alarms.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</td>\r\n            <td onClick={() => props.deleteAlarm(alarms)} className=\"table__delete-alarms\">\r\n              x\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SetAlarmsTable;\r\n","import React from 'react';\r\nimport SetAlarmsTable from './SetAlarmsTable';\r\n\r\nconst SetTime = props => {\r\n  return (\r\n    <div>\r\n      <label className=\"what-time-alarm\">\r\n        Година будильника:\r\n        <input\r\n          type=\"time\"\r\n          value={props.value}\r\n          onChange={props.change}\r\n          className=\"time-alarm\"\r\n          onKeyPress={props.handleEnterPress}\r\n        />\r\n      </label>\r\n      {props.setAlarms.length > 0 && (\r\n        <div>\r\n          <h3>Встановлені будильники:</h3>\r\n          <SetAlarmsTable setAlarms={props.setAlarms} deleteAlarm={props.deleteAlarm} />\r\n        </div>\r\n      )}\r\n      <div className=\"buttons\">\r\n        <button onClick={props.setTime} className=\"buttons__left button\">\r\n          Встановити\r\n        </button>\r\n        {props.visibleButtonPauseAudio && (\r\n          <button onClick={props.stopAlarm} className=\"buttons__right button\">\r\n            Виключити\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetTime;\r\n","import React from 'react';\r\n\r\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import React from 'react';\nimport './App.css';\nimport Clock from './components/Clock';\nimport SetTime from './components/SetTime';\nimport Title from './components/Title';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      time: new Date().toLocaleTimeString(),\n      controllTime: '',\n      setAlarms: [],\n      visibleButtonPauseAudio: false,\n    };\n\n    this.url = 'http://streaming.tdiradio.com:8000/house.mp3';\n    this.audio = new Audio(this.url);\n\n    this.timer = this.timer.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.alarmСlock = this.alarmСlock.bind(this);\n    this.compareAlarm = this.compareAlarm.bind(this);\n    this.stopAlarm = this.stopAlarm.bind(this);\n    this.deleteAlarm = this.deleteAlarm.bind(this);\n    this.handleEnterPress = this.handleEnterPress.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(this.timer, 1000);\n    document.body.style.backgroundImage = `url(https://source.unsplash.com/random/1600x900/?city)`;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUpdate() {\n    if (this.state.time === null) {\n      return;\n    }\n\n    if (this.state.time.split(':')[2] === '00') {\n      this.compareAlarm();\n    }\n  }\n\n  timer() {\n    let time = new Date().toLocaleTimeString();\n\n    this.setState({\n      time: time.toString(),\n    });\n  }\n\n  onChange(event) {\n    this.setState({\n      controllTime: event.target.value,\n    });\n  }\n\n  alarmСlock() {\n    if (this.state.controllTime === '') {\n      return;\n    }\n\n    let time = this.state.controllTime.split(':');\n\n    let setTime = new Date();\n    setTime.setHours(time[0]);\n    setTime.setMinutes(time[1]);\n\n    this.setState(prevState => {\n      return {\n        controllTime: '',\n        setAlarms: [...prevState.setAlarms, setTime],\n      };\n    });\n  }\n\n  compareAlarm() {\n    const { time, setAlarms } = this.state;\n\n    if (time === null || setAlarms.length < 1) {\n      return;\n    }\n\n    let splitTime = time.split(':');\n\n    for (let alarms of setAlarms) {\n      if (+splitTime[0] === alarms.getHours() && +splitTime[1] === alarms.getMinutes()) {\n        this.audio.play();\n\n        this.setState({\n          visibleButtonPauseAudio: true,\n        });\n\n        setTimeout(() => {\n          let deleteAlarm = this.state.setAlarms.filter(alarm => alarms !== alarm);\n\n          this.setState({\n            setAlarms: deleteAlarm,\n            visibleButtonPauseAudio: false,\n          });\n        }, 60000);\n      } else {\n        this.audio.pause();\n\n        this.setState({\n          visibleButtonPauseAudio: false,\n        });\n      }\n    }\n  }\n\n  stopAlarm() {\n    this.audio.pause();\n\n    this.setState({\n      visibleButtonPauseAudio: false,\n    });\n  }\n\n  deleteAlarm(alarm) {\n    let deleteAlarm = this.state.setAlarms.filter(alarms => alarms !== alarm);\n\n    this.setState({\n      setAlarms: deleteAlarm,\n    });\n  }\n\n  handleEnterPress = event => {\n    if (event.key === 'Enter') {\n      this.alarmСlock();\n    }\n  };\n\n  render() {\n    const { controllTime, time, setAlarms, visibleButtonPauseAudio } = this.state;\n\n    return (\n      <div className=\"page\">\n        <Title>Будильник</Title>\n        <Clock time={time} />\n        <SetTime\n          value={controllTime}\n          change={this.onChange}\n          setTime={this.alarmСlock}\n          stopAlarm={this.stopAlarm}\n          setAlarms={setAlarms}\n          deleteAlarm={this.deleteAlarm}\n          visibleButtonPauseAudio={visibleButtonPauseAudio}\n          handleEnterPress={this.handleEnterPress}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}